import React, { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import Header from '@/components/Header';
import Sidebar from '@/components/Sidebar';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Checkbox } from '@/components/ui/checkbox';
import { ArrowLeft, Bot, Send, Volume2, Phone, PhoneOff, Mic, MicOff, Brain, Volume2 as Volume2Icon, Wrench } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { useAgentTester } from '@/hooks/useAgentTester';
import { getApiUrl } from '@/config/api';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞
interface CreateAgentData {
  name: string;
  role: string;
  model: string;
  voice: string;
  systemPrompt: string;
  ssmlEnabled?: boolean;
  ssmlInstructions?: string;
  vadConfigEnabled?: boolean;
  vadConfig?: {
    vadMinSpeechDuration?: number;
    vadMinSilenceDuration?: number;
    vadPrefixPaddingDuration?: number;
    vadMaxBufferedSpeech?: number;
    vadActivationThreshold?: number;
    vadForceCPU?: boolean;
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API
const createAgent = async (agentData: CreateAgentData): Promise<unknown> => {
  const response = await fetch(getApiUrl('agents/create-one'), {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(agentData),
  });

  if (!response.ok) {
    const errorData = await response.json().catch(() => ({}));
    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
  }

  return response.json();
};

const AgentCreate = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [testMessage, setTestMessage] = useState('');
  const [testResponse, setTestResponse] = useState('');
  const [isCreating, setIsCreating] = useState(false);
  const [showStatistics, setShowStatistics] = useState(true); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω
  const [functionsExpanded, setFunctionsExpanded] = useState(false); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–≤–µ—Ä–Ω—É—Ç
  // const [selectedKnowledgeBase, setSelectedKnowledgeBase] = useState('');

  // –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π LLM
  const availableTools = [
    {
      name: 'findCustomer',
      icon: 'üîç',
      description: '–ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω.',
      example: '[[findCustomer]]'
    },
    {
      name: 'getCustomerQuestions',
      icon: '‚ùì',
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –∫–ª–∏–µ–Ω—Ç—É.',
      example: '[[getCustomerQuestions]]'
    },
    {
      name: 'getCustomerVacancies',
      icon: 'üíº',
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.',
      example: '[[getCustomerVacancies]]'
    }
  ];
  
  // Ref –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —á–∞—Ç–∞ –≤ –∫–æ–Ω–µ—Ü
  const chatContainerRef = useRef<HTMLDivElement>(null);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞
  const { 
    isConnected, 
    isRecording, 
    connectionStatus, 
    messages, 
    connectToAgent, 
    disconnectFromAgent 
  } = useAgentTester();

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const MessageStatistics = ({ performanceStats, toolCalls }: { 
    performanceStats?: { sttDurationMs?: number; llmDurationMs?: number; ttsDurationMs?: number }; 
    toolCalls?: string[] 
  }) => {
    if (!performanceStats && (!toolCalls || toolCalls.length === 0)) return null;

    return (
      <div className="mt-2 p-2 bg-emerald-200 rounded-md text-xs">
        <div className="grid grid-cols-2 gap-2">
          {performanceStats?.sttDurationMs && (
            <div className="flex items-center space-x-1">
              <Mic className="h-3 w-3 text-blue-600" />
              <span className="text-slate-600">STT:</span>
              <span className="text-slate-600">{performanceStats.sttDurationMs}ms</span>
            </div>
          )}
          {performanceStats?.llmDurationMs && (
            <div className="flex items-center space-x-1">
              <Brain className="h-3 w-3 text-green-600" />
              <span className="text-slate-600">LLM:</span>
              <span className="text-slate-600">{performanceStats.llmDurationMs}ms</span>
            </div>
          )}
          {performanceStats?.ttsDurationMs && (
            <div className="flex items-center space-x-1">
              <Volume2Icon className="h-3 w-3 text-purple-600" />
              <span className="text-slate-600">TTS:</span>
              <span className="text-slate-600">{performanceStats.ttsDurationMs}ms</span>
            </div>
          )}
          {toolCalls && toolCalls.length > 0 && (
            <div className="flex items-center space-x-1 col-span-2">
              <Wrench className="h-3 w-3 text-orange-600" />
              <span className="text-slate-600">Tools:</span>
              <span className="text-slate-600">{toolCalls.join(', ')}</span>
            </div>
          )}
        </div>
      </div>
    );
  };

  const voices = [
    { id: 'Nec_24000', name: 'Nec 24000' },
    { id: 'Nec_8000', name: 'Nec 8000' },
    { id: 'Bys_24000', name: 'Bys 24000' },
    { id: 'Bys_8000', name: 'Bys 8000' }
  ];

  const models = [
    { id: 'deepseek/deepseek-chat-v3-0324:free', name: 'FREE: deepseek/deepseek-chat-v3-0324:free', isFree: true },
    { id: 'deepseek/deepseek-chat-v3-0324', name: 'deepseek/deepseek-chat-v3-0324', isFree: false },
    { id: 'deepseek/deepseek-r1-0528', name: 'deepseek/deepseek-r1-0528', isFree: false },
    { id: 'openai/gpt-4.1-mini', name: 'openai/gpt-4.1-mini', isFree: false },
    { id: 'openai/gpt-4o-mini', name: 'openai/gpt-4o-mini', isFree: false },
    { id: 'openai/gpt-4o-mini-2024-07-18', name: 'openai/gpt-4o-mini-2024-07-18', isFree: false },
    { id: 'openai/o4-mini', name: 'openai/o4-mini', isFree: false },
    { id: 'openai/o3-mini', name: 'openai/o3-mini', isFree: false },
    { id: 'anthropic/claude-3.5-sonnet', name: 'anthropic/claude-3.5-sonnet', isFree: false },
    { id: 'anthropic/claude-sonnet-4', name: 'anthropic/claude-sonnet-4', isFree: false },
    { id: 'anthropic/claude-opus-4', name: 'anthropic/claude-opus-4', isFree: false },
    { id: 'google/gemini-2.5-pro-exp-03-25', name: 'FREE: google/gemini-2.5-pro-exp-03-25', isFree: true },
    { id: 'google/gemini-2.0-flash-exp:free', name: 'FREE: google/gemini-2.0-flash-exp:free', isFree: true },
    { id: 'google/gemini-2.5-flash-lite-preview-06-17', name: 'google/gemini-2.5-flash-lite-preview-06-17', isFree: false },
    { id: 'google/gemini-flash-1.5', name: 'google/gemini-flash-1.5', isFree: false },
    { id: 'google/gemini-2.0-flash-lite-001', name: 'google/gemini-2.0-flash-lite-001', isFree: false },
    { id: 'google/gemini-2.5-flash-lite', name: 'google/gemini-2.5-flash-lite', isFree: false },
    { id: 'x-ai/grok-3-mini-beta', name: 'x-ai/grok-3-mini-beta', isFree: false },
    { id: 'x-ai/grok-3-mini', name: 'x-ai/grok-3-mini', isFree: false },
    { id: 'mistralai/ministral-8b', name: 'mistralai/ministral-8b', isFree: false },
    { id: 'microsoft/phi-3.5-mini-128k-instruct', name: 'microsoft/phi-3.5-mini-128k-instruct', isFree: false },
    { id: 'minimax/minimax-m1', name: 'minimax/minimax-m1', isFree: false },
    { id: 'qwen/qwen3-coder:free', name: 'FREE: qwen/qwen3-coder:free', isFree: true },
    { id: 'qwen/qwen3-4b:free', name: 'FREE: qwen/qwen3-4b:free', isFree: true },
    { id: 'qwen/qwen3-235b-a22b:free', name: 'FREE: qwen/qwen3-235b-a22b:free', isFree: true },
    { id: 'mistralai/mistral-small-3.1-24b-instruct:free', name: 'FREE: mistralai/mistral-small-3.1-24b-instruct:free', isFree: true },
    { id: 'mistralai/mistral-small-3.2-24b-instruct:free', name: 'FREE: mistralai/mistral-small-3.2-24b-instruct:free', isFree: true },
    { id: 'mistralai/mistral-7b-instruct:free', name: 'FREE: mistralai/mistral-7b-instruct:free', isFree: true },
    { id: 'mistralai/devstral-small-2505:free', name: 'FREE: mistralai/devstral-small-2505:free', isFree: true },
    { id: 'moonshotai/kimi-k2:free', name: 'FREE: moonshotai/kimi-k2:free', isFree: true },
    { id: 'meta-llama/llama-3.3-70b-instruct:free', name: 'FREE: meta-llama/llama-3.3-70b-instruct:free', isFree: true },
  ];

  const knowledgeBases = [
    { id: 'general', name: 'General Knowledge Base' },
    { id: 'sales', name: 'Sales Training Materials' },
    { id: 'support', name: 'Support Documentation' },
    { id: 'hr', name: 'HR Policies & Procedures' }
  ];

  // –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ app.js
  const defaultSystemPrompt = `–ì–æ–≤–æ—Ä–∏ —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É, –Ω–µ –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω–æ.
–ü–ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–π –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã tools. –ß—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–∏—Ö –ø–∞—É–∑ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ.

–í —Ç–µ–∫—Å—Ç–µ –¥–∞–Ω—ã –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∫–æ–≥–¥–∞ –∏ –∫–∞–∫–æ–π Tool –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω–Ω—ã –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ - [[findCustomer]]. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –≤ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è findCustomer Tool.

–¢–≤–æ—è —Ü–µ–ª—å - –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –µ–º—É –≤–∞–∫–∞–Ω—Å–∏—é.

1. –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞.
–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ –Ω–∞ –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–ª–∏—á–Ω–æ–π. –¢—ã –º–æ–∂–µ—à—å –Ω–µ –∑–Ω–∞—Ç—å –Ω–∏—á–µ–≥–æ, –º–æ–∂–µ—à—å –∑–Ω–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –º–æ–∂–µ—à—å –∑–Ω–∞—Ç—å –≤—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –æ –∫–ª–∏–µ–Ω—Ç–µ - –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∏–µ–Ω—Ç–µ —è–≤–ª—è—é—Ç—Å—è –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è.

–í—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–î–æ—Å—Ç—É–ø–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ". –ï—Å–ª–∏ —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ—é—â–µ–π—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ –∏ –∑–∞–ø—Ä–æ—Å —É –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–π
    2.1. –ï—Å–ª–∏ –º—ã –Ω–µ –∑–Ω–∞–µ–º –æ –∫–ª–∏–µ–Ω—Ç–µ –Ω–∏—á–µ–≥–æ, —Ç–æ —Å–Ω–∞—á–∞–ª–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –µ–≥–æ –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —á—Ç–æ –Ω–æ–º–µ—Ä –≤–µ—Ä–Ω—ã–π, –∏—â–µ–º –ø–æ –Ω–µ–º—É –∫–ª–∏–µ–Ω—Ç–∞ [[findCustomer]].
        2.1.1. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –Ω–µ –Ω–∞—à–ª–∏, —Ç–æ –ø—Ä–æ—Å–∏–º –∫–ª–∏–µ–Ω—Ç–∞ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –º—ã —Å –Ω–∏–º —Å–≤—è–∂–µ–º—Å—è. –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥.
        2.1.2. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –Ω–∞—à–ª–∏ —Ç–æ —Å–º–æ—Ç—Ä–∏–º –∏–∑–≤–µ—Å—Ç–Ω—ã –ª–∏ –Ω–∞–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∫–ª–∏–µ–Ω—Ç–∞.
            2.1.2.1. –ï—Å–ª–∏ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã, —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏—Ö —É –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –∏—Ö –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ.
            2.1.2.2. –ï—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã, —Ç–æ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –∏—Ö –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ.
    2.2. –ï—Å–ª–∏ –º—ã –∑–Ω–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞, —Ç–æ –ø–æ –Ω–µ–º—É –∏—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ [[findCustomer]].
        2.2.1. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –Ω–µ –Ω–∞—à–ª–∏, —Ç–æ –ø—Ä–æ—Å–∏–º –∫–ª–∏–µ–Ω—Ç–∞ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –º—ã —Å –Ω–∏–º —Å–≤—è–∂–µ–º—Å—è. –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥.
        2.2.2. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –Ω–∞—à–ª–∏ —Ç–æ —Å–º–æ—Ç—Ä–∏–º –∏–∑–≤–µ—Å—Ç–Ω—ã –ª–∏ –Ω–∞–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∫–ª–∏–µ–Ω—Ç–∞.
            2.2.2.1. –ï—Å–ª–∏ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã, —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –∏—Ö —É –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –∏—Ö –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ.
            2.2.2.2. –ï—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã, —Ç–æ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –∏—Ö –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ.
    2.3. –ï—Å–ª–∏ –º—ã –∑–Ω–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∏–º–µ–µ–º –Ω–µ–ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º (–Ω–µ—Ç –∏–º–µ–Ω–∏ –∏–ª–∏ —Ñ–∞–º–∏–ª–∏–∏), —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –µ—ë –∫–ª–∏–µ–Ω—Ç—É, –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á—Ç–æ –º—ã –≤–µ—Ä–Ω–æ –µ—ë –∑–∞–ø–∏—Å–∞–ª–∏. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–¥–µ–º –¥–∞–ª—å—à–µ.
    2.4. –ï—Å–ª–∏ –º—ã –∑–Ω–∞–µ–º –≤—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –æ –∫–ª–∏–µ–Ω—Ç–µ, —Ç–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.

3. –ó–∞–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –µ–º—É –≤–∞–∫–∞–Ω—Å–∏–π [[getCustomerQuestions]].

4. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã [[getCustomerVacancies]].

5. –ü—Ä–æ—Å–∏–º –∫–ª–∏–µ–Ω—Ç–∞ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –≤–∞–∫–∞–Ω—Å–∏–π
    5.1 –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –≤—ã–±—Ä–∞–ª –≤–∞–∫–∞–Ω—Å–∏—é, —Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º, –ø—Ä–æ—â–∞–µ–º—Å—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
    5.2 –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–ª –≤–∞–∫–∞–Ω—Å–∏—é, —Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º, –ø—Ä–æ—â–∞–µ–º—Å—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥


–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–ø—Ä–æ—Å–∏—Ç—å —É –∫–ª–∏–µ–Ω—Ç–∞ –µ–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –µ–º—É –¥–æ—Å–ª–æ–≤–Ω–æ –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä –Ω—É–∂–µ–Ω, –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ—Å–∏ —Å–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–∑–≤–∞–ª –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, —Ç–æ —É—Ç–æ—á–Ω–∏ —á—Ç–æ –Ω–æ–º–µ—Ä –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –Ω—É–∂–µ–Ω –∏–º–µ–Ω–Ω–æ –Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–µ –≥–æ–≤–æ—Ä–∏ –∫–ª–∏–µ–Ω—Ç—É –¥–æ—Å–ª–æ–≤–Ω–æ —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∏ –Ω–µ –≥–æ–≤–æ—Ä–∏ –ø—Ä–∏–º–µ—Ä—ã. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–∫–∞–∑–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, –Ω–æ –≤–º–µ—Å—Ç–æ +7 —Å–∫–∞–∑–∞–ª 8, —Ç–æ –ø–æ–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–∏—Ç—å –æ–± —ç—Ç–æ–º –∫–ª–∏–µ–Ω—Ç–∞. –ò –Ω–µ –Ω—É–∂–Ω–æ —Å–æ–æ–±—â–∞—Ç—å –µ–º—É —á—Ç–æ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—à—å.`;

  const [agentConfig, setAgentConfig] = useState({
    name: '–û–ø—Ç–∏–º—É—Å –ü—Ä–∞–π–º',
    role: '–¢—ã HR-–º–µ–Ω–µ–¥–∂–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è. –ú—É–∂—á–∏–Ω–∞.',
    model: 'deepseek/deepseek-chat-v3-0324:free',
    voice: 'Bys_24000',
    systemPrompt: defaultSystemPrompt,
    maxTokens: 1000,
    ssmlEnabled: false,
    ssmlInstructions: `
–í—Å–µ —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ TTS. –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏–µ–π –∏—Å–ø–æ–ª—å–∑—É–π SSML
(Speech Synthesis Markup Language) ‚Äî —è–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ (–±–∞–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞
—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ W3C).

–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –û–±–æ—Ä–∞—á–∏–≤–∞–π –∫–∞–∂–¥–æ–µ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏ <speak>!
–ù–∞–ø—Ä–∏–º–µ—Ä: –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ - <speak>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø HR-–º–µ–Ω–µ–¥–∂–µ—Ä. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ,
–ø–æ–∂–∞–ª—É–π—Å—Ç–∞,–≤–∞—à –Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.</speak>. –ü—Ä–∞–≤–∏–ª—å–Ω–æ - <speak>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</
speak> <speak>–Ø HR-–º–µ–Ω–µ–¥–∂–µ—Ä.</speak> <speak>–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,–≤–∞—à
–Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.</speak>

–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–æ–Ω–∞—Ü–∏–µ–π –∏ —Ç–æ–Ω–æ–º —Å –ø–æ–º–æ—â—å—é SSML! –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π
–≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–±–µ —Ç–µ–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å–∞–Ω–Ω—ã —Ç—É—Ç. –í—Å–µ–≥–¥–∞ —Ä–∞—Å—Å—Ç–∞–≤–ª—è–π —Ç–µ–≥–∏ –ø–∞—É–∑ –≤
–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö!

–î–∞–ª–µ–µ –±—É–¥—É—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–±–æ—Ç–µ —Å SSML:
1. –ò—Å–ø–æ–ª—å–∑—É–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—é, —Å–∫–æ—Ä–æ—Å—Ç—é –∏ —Ç–æ–Ω–æ–º!
–¢–µ–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç.
–ê—Ç—Ä–∏–±—É—Ç—ã —Ç–µ–≥–∞:
- pitch - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–Ω–æ–º –≥–æ–ª–æ—Å–∞ (–ø—Ä–∏–º–µ—Ä: <speak><paint pitch="value">—Ç–µ–∫—Å—Ç</paint></
speak>). –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è value: x-low, low, medium, high, x-high
- slope - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–æ–Ω–∞—Ü–∏–µ–π: –Ω–∏—Å—Ö–æ–¥—è—â–∞—è, —Ä–æ–≤–Ω–∞—è, –≤–æ—Å—Ö–æ–¥—è—â–∞—è (–ø—Ä–∏–º–µ—Ä: <speak><paint
slope="value">—Ç–µ–∫—Å—Ç</paint></speak>). –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è value: x-low, low, medium,
high, x-high
- speed - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç—å—é (–ø—Ä–∏–º–µ—Ä: <speak><paint speed="value">—Ç–µ–∫—Å—Ç</paint></
speak>). –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è value: x-low, low, medium, high, x-high
- loudness - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é (–ø—Ä–∏–º–µ—Ä: <speak><paint loudness="value">—Ç–µ–∫—Å—Ç</
paint></speak>). –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è value: x-low, low, medium, high, x-high

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: <speak><paint pitch="x-high"
speed="high">–≤—ã—Å–æ–∫–æ –∏ –±—ã—Å—Ç—Ä–æ,<paint loudness="x-high">–∞ –µ—â–µ –∏ –≥—Ä–æ–º–∫–æ</paint></paint></
speak>

–¢–µ–≥–æ–º –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª—è—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞, —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Ü–µ–ª–∏–∫–æ–º. –í—ã
–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–≥ paint –¥–ª—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ü–µ–Ω—Ç–æ–≤ –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –≤–æ–ø—Ä–æ—Å–µ
¬´–õ—é–±–∏—à—å –ø–µ—Å–∏–∫–æ–≤?¬ª —Å–µ—Ä–≤–∏—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–¥–µ–ª–∞–µ—Ç –∞–∫—Ü–µ–Ω—Ç –Ω–∞ ¬´–ª—é–±–∏—à—å¬ª. –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ,
–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: <paint pitch="x-high" slope="x-high"
loudness="high">. –ù–∞–ø—Ä–∏–º–µ—Ä: <speak>–ª—é–±–∏—à—å <paint pitch="x-high" slope="x-high"
loudness="high">–ø–µ—Å–∏–∫–æ–≤?</paint></speak>

2. –ü–∞—É–∑—ã –≤ —Ç–µ–∫—Å—Ç–µ
–¢–µ–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—É–∑ –≤ —Ç–µ–∫—Å—Ç–µ. <break time="200ms" /> –ü—Ä–∏–º–µ—Ä:
<speak>–ü—Ä–∏–≤–µ—Ç!<break time="200ms" /> –ö–∞–∫ –ø—Ä–æ—à–µ–ª –¥–µ–Ω—å?<break strength="weak" /> –í—Å–µ
—Ö–æ—Ä–æ—à–æ?</speak>
    `
  });

  // VAD –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ñ–æ—Ä–º—ã
  const [vadConfig, setVadConfig] = useState({
    vadMinSpeechDuration: '200',
    vadMinSilenceDuration: '500',
    vadPrefixPaddingDuration: '50',
    vadMaxBufferedSpeech: '30000',
    vadActivationThreshold: '0.2',
    vadForceCPU: true,
  });
  
  const [vadConfigEnabled, setVadConfigEnabled] = useState(false);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
  const [showOnlyFree, setShowOnlyFree] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π
  const filteredModels = showOnlyFree ? models.filter(model => model.isFree) : models;

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  useEffect(() => {
    if (showOnlyFree && !filteredModels.some(model => model.id === agentConfig.model)) {
      // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é
      if (filteredModels.length > 0) {
        setAgentConfig(prev => ({...prev, model: filteredModels[0].id}));
      }
    }
  }, [showOnlyFree, agentConfig.model]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –ø—Ä–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
  useEffect(() => {
    if (chatContainerRef.current) {
      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;
    }
  }, [messages]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsCreating(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è API
      const agentData: CreateAgentData = {
        name: agentConfig.name,
        role: agentConfig.role,
        model: agentConfig.model,
        voice: agentConfig.voice,
        systemPrompt: agentConfig.systemPrompt,
        ssmlEnabled: agentConfig.ssmlEnabled,
        ssmlInstructions: agentConfig.ssmlInstructions,
        vadConfigEnabled: vadConfigEnabled,
      };

      // –î–æ–±–∞–≤–ª—è–µ–º VAD –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω vadConfigEnabled –∏ –µ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è
      if (vadConfigEnabled) {
        const hasVadConfig = vadConfig.vadMinSpeechDuration !== undefined || 
                             vadConfig.vadMinSilenceDuration !== undefined || 
                             vadConfig.vadPrefixPaddingDuration !== undefined || 
                             vadConfig.vadMaxBufferedSpeech !== undefined || 
                             vadConfig.vadActivationThreshold !== undefined || 
                             vadConfig.vadForceCPU !== undefined;
        
        if (hasVadConfig) {
          agentData.vadConfig = {};
          
          if (vadConfig.vadMinSpeechDuration) {
            agentData.vadConfig.vadMinSpeechDuration = Number(vadConfig.vadMinSpeechDuration);
          }
          if (vadConfig.vadMinSilenceDuration) {
            agentData.vadConfig.vadMinSilenceDuration = Number(vadConfig.vadMinSilenceDuration);
          }
          if (vadConfig.vadPrefixPaddingDuration) {
            agentData.vadConfig.vadPrefixPaddingDuration = Number(vadConfig.vadPrefixPaddingDuration);
          }
          if (vadConfig.vadMaxBufferedSpeech) {
            agentData.vadConfig.vadMaxBufferedSpeech = Number(vadConfig.vadMaxBufferedSpeech);
          }
          if (vadConfig.vadActivationThreshold) {
            agentData.vadConfig.vadActivationThreshold = Number(vadConfig.vadActivationThreshold);
          }
          if (vadConfig.vadForceCPU !== undefined) {
            agentData.vadConfig.vadForceCPU = vadConfig.vadForceCPU;
          }
        }
      }

      await createAgent(agentData);

      toast({
        title: "–ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω",
        description: `–ê–≥–µ–Ω—Ç "${agentConfig.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`,
      });
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≥–µ–Ω—Ç–æ–≤
      navigate('/agents');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞",
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞",
        variant: "destructive"
      });
    } finally {
      setIsCreating(false);
    }
  };

  const handleTestAgent = () => {
    // if (testMessage.trim()) {
    //   setTestResponse(`This is a test response from your AI agent using ${
    //     agentConfig.voice ? voices.find(v => v.id === agentConfig.voice)?.name : 'default voice'
    //   }. Original message: "${testMessage}"`);
    // }
  };

  const handleListenVoice = () => {
    if (agentConfig.voice) {
      toast({
        title: "Voice Preview",
        description: `Playing preview of ${voices.find(v => v.id === agentConfig.voice)?.name}`,
      });
    } else {
      toast({
        title: "–ì–æ–ª–æ—Å –Ω–µ –≤—ã–±—Ä–∞–Ω",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è.",
        variant: "destructive"
      });
    }
  };

  const handleCall = async () => {
    if (isConnected) {
      // –ï—Å–ª–∏ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã, –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è
      try {
        await disconnectFromAgent();

        toast({
          title: "–û—Ç–∫–ª—é—á–µ–Ω–æ",
          description: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∞–≥–µ–Ω—Ç–æ–º —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ",
        });
      } catch (error) {
        toast({
          title: "–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è",
          description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –∞–≥–µ–Ω—Ç–∞",
          variant: "destructive"
        });
      }
    } else {
      try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–≥–µ–Ω—Ç–∞ —Å VAD –ø–æ–ª—è–º–∏
        const testConfig = {
          ...agentConfig,
          ...(vadConfigEnabled && {
            vadMinSpeechDuration: vadConfig.vadMinSpeechDuration ? parseInt(vadConfig.vadMinSpeechDuration) : undefined,
            vadMinSilenceDuration: vadConfig.vadMinSilenceDuration ? parseInt(vadConfig.vadMinSilenceDuration) : undefined,
            vadPrefixPaddingDuration: vadConfig.vadPrefixPaddingDuration ? parseInt(vadConfig.vadPrefixPaddingDuration) : undefined,
            vadMaxBufferedSpeech: vadConfig.vadMaxBufferedSpeech ? parseInt(vadConfig.vadMaxBufferedSpeech) : undefined,
            vadActivationThreshold: vadConfig.vadActivationThreshold ? parseFloat(vadConfig.vadActivationThreshold) : undefined,
            vadForceCPU: vadConfig.vadForceCPU,
          }),
        };

        await connectToAgent(testConfig);

        toast({
          title: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∞–≥–µ–Ω—Ç—É",
          description: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∞–≥–µ–Ω—Ç–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
        });
      } catch (error) {
        toast({
          title: "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
          description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∞–≥–µ–Ω—Ç—É",
          variant: "destructive"
        });
      }
    }
  };

  return (
    <div className="min-h-screen bg-slate-50">
      <Header />
      
      <div className="flex">
        <Sidebar />
        
        <main className="flex-1 p-6">
          <div className="flex items-center mb-8">
            <Button 
              variant="ghost" 
              onClick={() => navigate('/agents')}
              className="mr-4"
            >
              <ArrowLeft className="h-4 w-4 mr-2" />
              –ù–∞–∑–∞–¥ –∫ –∞–≥–µ–Ω—Ç–∞–º
            </Button>
            <div>
              <h1 className="text-2xl font-bold text-slate-900">–°–æ–∑–¥–∞–Ω–∏–µ AI –∞–≥–µ–Ω—Ç–∞</h1>
              <p className="text-slate-600">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ–µ–≥–æ AI –∞–≥–µ–Ω—Ç–∞</p>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Agent Configuration */}
            <div>
              <form onSubmit={handleSubmit} className="bg-white rounded-xl p-6 shadow-sm border border-slate-200 space-y-6">
                <div>
                  <Label htmlFor="name">–ù–∞–∑–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞</Label>
                  <Input 
                    id="name" 
                    value={agentConfig.name}
                    onChange={(e) => setAgentConfig({...agentConfig, name: e.target.value})}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞" 
                    required 
                  />
                </div>

                <div>
                  <Label htmlFor="role">–†–æ–ª—å/–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è</Label>
                  <Textarea 
                    id="role" 
                    value={agentConfig.role}
                    onChange={(e) => setAgentConfig({...agentConfig, role: e.target.value})}
                    placeholder="–û–ø–∏—à–∏—Ç–µ —Ä–æ–ª—å, –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –æ–±–ª–∞—Å—Ç–∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã –∞–≥–µ–Ω—Ç–∞ –≤ –¥–µ—Ç–∞–ª—è—Ö" 
                    required 
                  />
                </div>

                <div>
                  <Label htmlFor="model">–ú–æ–¥–µ–ª—å AI</Label>
                  <div className="flex items-center space-x-2 mb-2">
                    <Checkbox 
                      id="freeOnly" 
                      checked={showOnlyFree}
                      onCheckedChange={(checked) => setShowOnlyFree(!!checked)}
                    />
                    <Label htmlFor="freeOnly" className="text-sm font-normal cursor-pointer">
                      –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏
                    </Label>
                  </div>
                  <Select value={agentConfig.model} onValueChange={(value) => setAgentConfig({...agentConfig, model: value})}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å AI" />
                    </SelectTrigger>
                    <SelectContent>
                      {filteredModels.map((model) => (
                        <SelectItem key={model.id} value={model.id}>
                          {model.name}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label htmlFor="voice">–ì–æ–ª–æ—Å</Label>
                  <div className="flex space-x-2">
                    <Select value={agentConfig.voice} onValueChange={(value) => setAgentConfig({...agentConfig, voice: value})}>
                      <SelectTrigger className="flex-1">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å" />
                      </SelectTrigger>
                      <SelectContent>
                        {voices.map((voice) => (
                          <SelectItem key={voice.id} value={voice.id}>
                            {voice.name}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                    {/* <Button type="button" variant="outline" onClick={handleListenVoice}>
                      <Volume2 className="h-4 w-4" />
                    </Button> */}
                  </div>
                </div>

                {/* –ë–ª–æ–∫ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ LLM */}
                <div className="mb-6">
                  <div 
                    className="flex items-center justify-between p-2 bg-blue-50 border border-blue-200 rounded-lg cursor-pointer hover:bg-blue-100 transition-colors"
                    onClick={() => setFunctionsExpanded(!functionsExpanded)}
                  >
                    <h3 className="text-sm font-medium text-blue-800 flex items-center gap-2">
                      <span className="text-base">üõ†Ô∏è</span>
                      –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ LLM
                    </h3>
                    <span className={`text-blue-600 transition-transform duration-200 ${functionsExpanded ? 'rotate-180' : ''}`}>
                      ‚ñº
                    </span>
                  </div>
                  
                  {functionsExpanded && (
                    <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                      <p className="text-sm text-gray-700 mb-4">
                        <strong>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</strong> –í —Å–∏—Å—Ç–µ–º–Ω–æ–º –ø—Ä–æ–º–ø—Ç–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –¥–≤–æ–π–Ω—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö [[tool]].
                      </p>
                      
                      <div className="p-3 bg-gray-100 rounded border-l-4 border-blue-500 mb-4">
                        <p className="text-xs text-gray-600">
                          <strong>–ü—Ä–∏–º–µ—Ä:</strong> "–ó–∞–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –µ–º—É –≤–∞–∫–∞–Ω—Å–∏–π [[getCustomerQuestions]]."
                        </p>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {availableTools.map((tool, index) => (
                          <div key={index} className="bg-white p-3 rounded border border-gray-200">
                            <div className="flex items-center justify-between mb-2">
                              <h4 className="text-sm font-medium text-blue-700 flex items-center gap-1">
                                <span>{tool.icon}</span>
                                {tool.name}
                              </h4>
                              <button
                                type="button"
                                onClick={(e) => {
                                  e.preventDefault();
                                  e.stopPropagation();
                                  navigator.clipboard.writeText(tool.example);
                                  toast({
                                    title: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
                                    description: `${tool.example} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞`,
                                    duration: 2000,
                                  });
                                }}
                                className="text-xs px-2 py-1 bg-blue-100 hover:bg-blue-200 text-blue-700 rounded transition-colors"
                                title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"
                              >
                                üìã
                              </button>
                            </div>
                            <p className="text-xs text-gray-600 mb-2">
                              {tool.description}
                            </p>
                            <p className="text-xs text-gray-500 italic">
                              –ü—Ä–∏–º–µ—Ä: {tool.example}
                            </p>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                </div>

                <div>
                  <Label htmlFor="instructions">–°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</Label>
                  <Textarea 
                    id="instructions" 
                    value={agentConfig.systemPrompt}
                    onChange={(e) => setAgentConfig({...agentConfig, systemPrompt: e.target.value})}
                    placeholder="–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ –∞–≥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –≤–µ—Å—Ç–∏ —Å–µ–±—è –∏ –æ—Ç–≤–µ—á–∞—Ç—å"
                    className="min-h-[200px]"
                  />
                </div>

                <div>
                  <div className="flex items-center space-x-2 mb-2">
                    <Checkbox 
                      id="ssmlEnabled" 
                      checked={agentConfig.ssmlEnabled}
                      onCheckedChange={(checked) => setAgentConfig({...agentConfig, ssmlEnabled: !!checked})}
                    />
                    <Label htmlFor="ssmlEnabled" className="text-sm font-normal cursor-pointer">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SSML
                    </Label>
                  </div>
                  {agentConfig.ssmlEnabled && (
                    <div>
                      <Label htmlFor="ssmlInstructions">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ SSML</Label>
                      <Textarea 
                        id="ssmlInstructions" 
                        value={agentConfig.ssmlInstructions}
                        onChange={(e) => setAgentConfig({...agentConfig, ssmlInstructions: e.target.value})}
                        placeholder="–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ SSML –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏"
                        className="min-h-[300px]"
                      />
                    </div>
                  )}
                </div>

                {/* VAD Configuration */}
                <div>
                  <div className="flex items-center space-x-2 mb-3">
                    <Checkbox 
                      id="vadConfigEnabled" 
                      checked={vadConfigEnabled}
                      onCheckedChange={(checked) => setVadConfigEnabled(!!checked)}
                    />
                    <Label htmlFor="vadConfigEnabled" className="text-sm font-normal cursor-pointer">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VAD
                    </Label>
                  </div>
                  
                  {vadConfigEnabled && (
                    <div>
                      <h3 className="text-lg font-medium text-slate-900 mb-3">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ VAD</h3>
                      <p className="text-sm text-slate-600 mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≥–æ–ª–æ—Å–∞ (Voice Activity Detection)</p>
                      
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <Label htmlFor="vadMinSpeechDuration">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ—á–∏ (–º—Å)</Label>
                          <Input 
                            id="vadMinSpeechDuration" 
                            type="number"
                            value={vadConfig.vadMinSpeechDuration}
                            onChange={(e) => setVadConfig({...vadConfig, vadMinSpeechDuration: e.target.value})}
                            placeholder="200"
                          />
                          <p className="text-xs text-slate-500 mt-1">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ—á–∏ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞, –º—Å</p>
                        </div>
                        
                        <div>
                          <Label htmlFor="vadMinSilenceDuration">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—à–∏–Ω—ã (–º—Å)</Label>
                          <Input 
                            id="vadMinSilenceDuration" 
                            type="number"
                            value={vadConfig.vadMinSilenceDuration}
                            onChange={(e) => setVadConfig({...vadConfig, vadMinSilenceDuration: e.target.value})}
                            placeholder="500"
                          />
                          <p className="text-xs text-slate-500 mt-1">–í—Ä–µ–º—è —Ç–∏—à–∏–Ω—ã, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç —Ä–µ—á–∏ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º, –º—Å</p>
                        </div>
                        
                        <div>
                          <Label htmlFor="vadPrefixPaddingDuration">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–∞—É–∑—ã (–º—Å)</Label>
                          <Input 
                            id="vadPrefixPaddingDuration" 
                            type="number"
                            value={vadConfig.vadPrefixPaddingDuration}
                            onChange={(e) => setVadConfig({...vadConfig, vadPrefixPaddingDuration: e.target.value})}
                            placeholder="50"
                          />
                          <p className="text-xs text-slate-500 mt-1">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–∞—É–∑—ã, –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ –≤ –Ω–∞—á–∞–ª–æ –∫–∞–∂–¥–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞ —Ä–µ—á–∏, –º—Å</p>
                        </div>
                        
                        <div>
                          <Label htmlFor="vadMaxBufferedSpeech">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ—á–∏ (–º—Å)</Label>
                          <Input 
                            id="vadMaxBufferedSpeech" 
                            type="number"
                            value={vadConfig.vadMaxBufferedSpeech}
                            onChange={(e) => setVadConfig({...vadConfig, vadMaxBufferedSpeech: e.target.value})}
                            placeholder="30000"
                          />
                          <p className="text-xs text-slate-500 mt-1">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ—á–∏ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –±—É—Ñ—Ñ–µ—Ä–µ, –º—Å</p>
                        </div>
                        
                        <div>
                          <Label htmlFor="vadActivationThreshold">–ü–æ—Ä–æ–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</Label>
                          <Input 
                            id="vadActivationThreshold" 
                            type="number"
                            step="0.1"
                            min="0"
                            max="1"
                            value={vadConfig.vadActivationThreshold}
                            onChange={(e) => setVadConfig({...vadConfig, vadActivationThreshold: e.target.value})}
                            placeholder="0.2"
                          />
                          <p className="text-xs text-slate-500 mt-1">–ü–æ—Ä–æ–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞, 0.0 - 1.0</p>
                        </div>
                        
                        <div className="flex items-center space-x-2">
                          <div className="grid grid-cols-1">
                            <div className="flex items-center space-x-2">
                              <Checkbox 
                                id="vadForceCPU" 
                                checked={vadConfig.vadForceCPU ?? false}
                                onCheckedChange={(checked) => setVadConfig({...vadConfig, vadForceCPU: !!checked})}
                              />
                              <Label htmlFor="vadForceCPU" className="text-sm font-normal cursor-pointer">
                                –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å CPU
                              </Label>
                            </div>
                            <p className="text-xs text-slate-500 mt-1">–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏</p>
                          </div>
                          
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* <div>
                  <Label htmlFor="max-tokens">Max Response Length</Label>
                  <Input 
                    id="max-tokens" 
                    type="number" 
                    value={agentConfig.maxTokens}
                    onChange={(e) => setAgentConfig({...agentConfig, maxTokens: parseInt(e.target.value) || 500})}
                    placeholder="500" 
                  />
                </div> */}

                <div className="flex justify-end space-x-4">
                  <Button type="button" variant="outline" onClick={() => navigate('/agents')}>
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button type="submit" className="bg-blue-600 hover:bg-blue-700" disabled={isCreating}>
                    <Bot className="h-4 w-4 mr-2" />
                    {isCreating ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞'}
                  </Button>
                </div>
              </form>
            </div>

            {/* Test Agent */}
            <div>
              <div className="bg-white rounded-xl p-6 shadow-sm border border-slate-200">
                <div className="flex items-center justify-between mb-4">
                  <div>
                    <h3 className="text-lg font-semibold text-slate-900">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞</h3>
                    <p className="text-slate-600">–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º</p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <Checkbox
                      id="show-statistics-test"
                      checked={showStatistics}
                      onCheckedChange={(checked) => setShowStatistics(checked as boolean)}
                    />
                    <label htmlFor="show-statistics-test" className="text-sm text-slate-600 cursor-pointer">
                        –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    </label>
                  </div>
                </div>
                
                <div className="space-y-4 mb-4">
                  {/*<div>
                    <Label>Knowledge Base</Label>
                    <Select value={selectedKnowledgeBase} onValueChange={setSelectedKnowledgeBase}>
                      <SelectTrigger>
                        <SelectValue placeholder="Select knowledge base" />
                      </SelectTrigger>
                      <SelectContent>
                        {knowledgeBases.map((kb) => (
                          <SelectItem key={kb.id} value={kb.id}>
                            {kb.name}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>*/}
                  
                  <Button 
                    onClick={handleCall} 
                    className={`w-full ${isConnected ? 'bg-red-600 hover:bg-red-700' : 'bg-green-600 hover:bg-green-700'}`}
                  >
                    {isConnected ? <PhoneOff className="h-4 w-4 mr-2" /> : <Phone className="h-4 w-4 mr-2" />}
                    {isConnected ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç' : '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≥–µ–Ω—Ç–∞'}
                    {isRecording && <Mic className="h-4 w-4 ml-2" />}
                  </Button>
                </div>
                
                {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
                <div className={`p-3 rounded-lg mb-4 text-sm font-medium ${
                  isConnected 
                    ? 'bg-green-100 text-green-800 border border-green-200' 
                    : 'bg-slate-100 text-slate-600 border border-slate-200'
                }`}>
                  –°—Ç–∞—Ç—É—Å: {connectionStatus}
                  {isRecording && (
                    <span className="ml-2 inline-flex items-center">
                      <span className="animate-pulse w-2 h-2 bg-red-500 rounded-full mr-1"></span>
                      –ó–∞–ø–∏—Å—å
                    </span>
                  )}
                </div>

                <div ref={chatContainerRef} className="border border-slate-200 rounded-lg p-4 h-64 mb-4 overflow-y-auto bg-slate-50">
                  {messages.length > 0 ? (
                    <div className="space-y-4">
                      {messages.map((message, index) => (
                        <div key={index} className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                          <div className={`p-3 rounded-lg max-w-xs ${
                            (message.sender === 'user')
                              ? 'bg-blue-600 text-white'
                              : (message.sender === 'error' ? 'bg-red-400 text-slate-700' : 'bg-slate-200 text-gray-900')
                          }`}>
                            {message.text}
                            {showStatistics && <MessageStatistics performanceStats={message.performanceStats} toolCalls={message.toolCalls} />}
                          </div>
                        </div>
                      ))}
                    </div>
                  ) : testResponse ? (
                    <div className="space-y-4">
                      <div className="flex justify-end">
                        <div className="bg-blue-600 text-white p-3 rounded-lg max-w-xs">
                          {testMessage}
                        </div>
                      </div>
                      <div className="flex justify-start">
                        <div className="bg-white border border-slate-200 p-3 rounded-lg max-w-xs">
                          {testResponse}
                        </div>
                      </div>
                    </div>
                  ) : (
                    <div className="flex items-center justify-center h-full text-slate-500">
                      {isConnected 
                        ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –∞–≥–µ–Ω—Ç—É. –ì–æ–≤–æ—Ä–∏—Ç–µ –≤ –º–∏–∫—Ä–æ—Ñ–æ–Ω –¥–ª—è –æ–±—â–µ–Ω–∏—è.' 
                        : '–ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≥–µ–Ω—Ç–∞" –¥–ª—è –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è'
                      }
                    </div>
                  )}
                </div>

                {/* <div className="flex space-x-2">
                  <Input
                    disabled={true}
                    placeholder="Type a test message..."
                    value={testMessage}
                    onChange={(e) => setTestMessage(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleTestAgent()}
                  />
                  <Button onClick={handleTestAgent} disabled={!testMessage.trim()}>
                    <Send className="h-4 w-4" />
                  </Button>
                </div> */}
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default AgentCreate;
